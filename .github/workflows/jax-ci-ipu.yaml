name: CI_jax_ipu

# Controls when the workflow will run
on:
  push:
    branches: [ "jax-v0.3.16-ipu" ]
  pull_request:
    branches: [ "jax-v0.3.16-ipu" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint_and_typecheck:
    runs-on: self-hosted-ci
    timeout-minutes: 10
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
        if: ${{github.ref != 'refs/head/jax-v0.3.16-ipu'}}
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: pre-commit/action@v3.0.0

  # JAX unit tests using IPU model
  jax_unit_tests_ipu_model:
    runs-on: self-hosted-ci
    container: graphcore/tensorflow:2-amd-3.0.0-ubuntu-20.04
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          # Hard-coding JAXLIB version to use for now. 
          # TODO: support latest jaxlib wheel.
          - name-prefix: "SDK 3.0.0"
            ipu_jax_tag: "jax-v0.3.16-ipu-beta1"
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
        if: ${{github.ref != 'refs/head/main'}}
      - uses: actions/checkout@v3
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python3 -m pip install --upgrade pip wheel setuptools
          echo "::set-output name=dir::$(pip cache dir)"
      # Query IPU JAX from internal Graphcore repo.
      - name: Fetch pre-compiled JAXLIB IPU release wheels
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'CHINA-ENGINEERING-GCCN/jax-poc'
          version: 'tags/${{ matrix.ipu_jax_tag }}'
          regex: true
          file: "jax.*.whl"
          target: "wheels/"
          token: ${{ secrets.JAX_GRAPHCORE_PAT }}
      - name: Pip install pre-compiled JAXLIB
        run: |
          ls ./wheels/
          pip3 install -U numpy scipy etils pytest
          pip3 install ./wheels/jaxlib-*cp38*.whl
      - name: Build & run tests
        run: |
          python3 setup.py bdist_wheel --universal
          pip3 install dist/*.whl
          XLA_IPU_PLATFORM_DEVICE_COUNT=2 TF_POPLAR_FLAGS='--use_ipu_model' pytest -vv --log-cli-level=INFO ./tests/ipu/
      # Dockerized workflow known to create issues with self-hosted servers.
      # Solution is to fully cleanup the workspace for the next action.
      # See: https://stackoverflow.com/questions/70483902/how-to-actually-clean-up-the-repository-on-self-hosted-runner-after-github-actio
      - name: Cleanup GITHUB_WORKSPACE folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
